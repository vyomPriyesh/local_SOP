import React, { useEffect, useState } from "react";
import Navbar from "../../Components/TopHeader/NavBar";
import TopHeader from "../../Components/TopHeader/TopHeader";

import Footer from "../../Components/Footer/Footer";
import {
  FaBriefcase,
  FaEnvelope,
  FaGlobe,
  FaMapMarkerAlt,
  FaPhoneAlt,
} from "react-icons/fa";

import {
  ContactAgentModal,
  ParentComponent,
} from "../../Components/Model/CustomModal";
// const BackgroundImage = new URL("../../Images/i.webp", import.meta.url).href;
import Profile from "../../Images/fcd540feb4463083a64ff0ff7a375a38.jpg";
// import listing_details_1 from "../../Images/listing_details_1.png";
// import listing_details_2 from "../../Images/listing_details_2.png";
import listing_eco from "../../Images/Screenshot 2025-03-06 170121.jpg";
import { TbPasswordUser } from "react-icons/tb";
import { FaSackDollar } from "react-icons/fa6";
import { FaStar } from "react-icons/fa";
import { RiVerifiedBadgeFill } from "react-icons/ri";
import { AiOutlineFieldTime } from "react-icons/ai";
import { HiArrowLeft } from "react-icons/hi";
import { Navigate, useNavigate } from "react-router";

import { showToast } from "../../Common/toastService";
import { API_URLS } from "../../Apis/api";
import { apiRequestGet, apiRequestPost } from "../../Common/Common";
import TotalReviewsCard from "../../Components/Review/TotalReviewsCard";
import Averating from "../../Components/Review/Averating";
const { AuthApi, DropdownApi, ListingApi } = API_URLS;
const RatingBar = ({ rating, percentage, isHighlighted }) => {
  return (
    <div className="flex items-center space-x-2">
      <span className="text-black flex text-[16px]">
        <FaStar className="me-3 text-blue-500 "></FaStar> {rating}
      </span>
      <div className="w-full bg-gray-300 rounded-full h-[5px]">
        <div
          className={`h-[5px] rounded-full ${isHighlighted ? "bg-blue-500" : "bg-gray-300"
            }`}
          style={{ width: `${percentage}%` }}
        ></div>
      </div>
    </div>
  );
};
export default function ListingDetails() {

  const [rating, setRating] = useState(0);
  const imgUrl = import.meta.env.VITE_IMAGE_BASEURL;
  const [expanded, setExpanded] = useState(false);
  const [showList, setShowList] = useState(false);
  const [showModal, setShowModal] = useState(false);
  const [review, setReview] = useState("");
  const [data, setData] = useState([]);
  const [getdata, setgetData] = useState([]);
  const ratings = [
    { rating: 5, percentage: 100, isHighlighted: true },
    { rating: 4, percentage: 0, isHighlighted: false },
    { rating: 3, percentage: 0, isHighlighted: false },
    { rating: 2, percentage: 0, isHighlighted: false },
    { rating: 1, percentage: 0, isHighlighted: false },
  ];
  const navigate = useNavigate();

  useEffect(() => {
    // console.log("location.search:", location.search);
    const params = new URLSearchParams(location.search);
    const idFromUrl = params.get("ListingDetails");
    // console.log("Product ID from URL:", idFromUrl);

    fetchListingData(idFromUrl);

    // console.log("showModal state changed:", showModal);
  }, [showModal]);

  const fetchListingData = async (idFromUrl) => {
    try {
      // setLoading(true);

      const response = await apiRequestGet(
        ListingApi.getListingDetails(idFromUrl)
      );

      if (response && response.success) {
        setData(response.data.result);
        // console.log("response.data.result", data);
      } else {
        console.error("API Request Failed:", response);
        showToast(response);
      }
    } catch (error) {
      console.error("API Error:", error);
      showToast(error);
    } finally {
      // setLoading(false);
    }

    try {
      // setLoading(true);

      const response1 = await apiRequestGet(
        ListingApi.getListingReview(idFromUrl)
      );

      if (response1 && response1.success) {
        setgetData(response1.data.result.resp);
        // console.log("response.data.result", response1.data.result);
      } else {
        console.error("API Request Failed:", response1);
        showToast(response1);
      }
    } catch (error) {
      console.error("API Error:", error);
      showToast(error);
    } finally {
      // setLoading(false);
    }
  };
  const description =
    data?.about_us ?? "No description available.";

  const handleSubmit = async (idFromUrl) => {
    const AUTHTOKEN = localStorage.getItem("AUTHTOKEN");
    const payload = {
      ratting: rating,
      review: review,
    };
    // console.log("payload", payload);
    try {
      const response = await apiRequestPost(
        ListingApi.ListingReview(idFromUrl),
        payload,
        AUTHTOKEN
      );

      if (response && response.success) {
        showToast(response);
        setRating(0);
        setReview("");
      } else {
        showToast("Failed to post review: " + response.message);
      }
    } catch (error) {
      console.error("Error submitting review:", error);
      showToast("Something went wrong! Please try again.");
    }
  };

  const getBusinessIcon = (businessType) => {
    switch (businessType) {
      case "Title Abstractor":
        return (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 49 49"
            fill="none"
          >
            <path
              d="M41.0866 28.842C40.9966 28.7372 40.8663 28.6771 40.7289 28.6771H38.4912V28.3953C38.4912 26.4563 36.9357 24.8791 35.0233 24.8791C33.2191 24.8791 31.7331 26.2833 31.5705 28.0703C31.4078 26.2833 29.9218 24.8791 28.1176 24.8791C26.3134 24.8791 24.8274 26.2833 24.6647 28.0703C24.502 26.2833 23.016 24.8791 21.2118 24.8791C19.4076 24.8791 17.9216 26.2833 17.759 28.0703C17.5963 26.2833 16.1103 24.8791 14.3061 24.8791C12.3937 24.8791 10.8382 26.4563 10.8382 28.3953V28.6771H8.60129C8.4639 28.6771 8.33362 28.7372 8.24361 28.842C8.15359 28.9469 8.11254 29.0862 8.13149 29.2239C8.68183 33.2309 10.6455 36.9145 13.6602 39.5965C16.7049 42.3034 20.6125 43.7941 24.6655 43.7941C28.7185 43.7941 32.6261 42.3034 35.67 39.5965C38.6847 36.9145 40.6484 33.2309 41.1987 29.2239C41.2177 29.0862 41.1766 28.9469 41.0866 28.842ZM35.0233 25.8398C36.413 25.8398 37.5437 26.9863 37.5437 28.3953V28.6771H32.503V28.3953C32.503 26.9863 33.6337 25.8398 35.0233 25.8398ZM28.1184 25.8398C29.508 25.8398 30.6387 26.9863 30.6387 28.3953V28.6771H25.5972V28.3953C25.5972 26.9863 26.7279 25.8398 28.1184 25.8398ZM21.2126 25.8398C22.6023 25.8398 23.733 26.9863 23.733 28.3953V28.6771H18.6922V28.3953C18.6922 26.9863 19.8229 25.8398 21.2126 25.8398ZM11.7873 28.3961C11.7873 26.9871 12.918 25.8406 14.3077 25.8406C15.6973 25.8406 16.828 26.9871 16.828 28.3961V28.6779H11.7873V28.3961ZM9.15558 29.6378H21.3058C21.2663 29.7115 21.2166 29.7828 21.1566 29.8484L20.7507 30.2919C20.2004 30.894 19.5797 31.2735 18.7973 31.4864L16.5248 32.1037C15.8458 32.2878 15.3515 32.789 15.1699 33.4775C14.9883 34.166 15.1683 34.8506 15.6658 35.3541L17.0933 36.8016C17.2576 36.9682 17.3247 37.1707 17.2939 37.4037C17.2631 37.6367 17.1447 37.8144 16.9433 37.9305C16.205 38.3564 15.7155 39.0681 15.5615 39.8727C12.2681 37.499 9.88674 33.8706 9.15558 29.6378ZM16.4585 40.4756C16.438 39.7759 16.7957 39.1218 17.4123 38.7663C17.8711 38.5013 18.1632 38.0634 18.2335 37.5326C18.3038 37.0018 18.1372 36.5014 17.7637 36.1227L16.3361 34.6752C16.0811 34.4166 15.9919 34.0796 16.085 33.7265C16.1782 33.3735 16.4214 33.1261 16.7704 33.0316L19.0428 32.4143C20.0053 32.1525 20.7689 31.6858 21.4463 30.9452L21.8522 30.5017C22.0804 30.2519 22.2375 29.9549 22.3133 29.6386H40.1762C40.0546 30.3408 39.888 31.0269 39.6788 31.693C39.1102 32.0557 38.0632 32.2862 36.946 32.2862C36.2361 32.2862 35.5618 32.1974 34.9965 32.0292C34.6846 31.9364 34.3964 31.8971 34.0324 31.8971C33.0478 31.8971 32.2471 32.709 32.2471 33.7073V34.1709C32.2471 34.419 32.0474 34.6216 31.8026 34.6216H28.2092C27.6928 34.6216 27.2419 34.6888 26.7476 34.8402C26.4547 34.9298 26.1791 35.0323 25.928 35.1452C25.4638 35.3541 25.144 35.7633 25.0492 36.2692C24.9545 36.7744 25.1045 37.2748 25.4606 37.6407C25.4969 37.6783 25.5348 37.7151 25.5735 37.7519C25.8388 38.0009 25.8759 38.4108 25.6604 38.7055L25.0137 39.5885C24.3039 40.5589 24.2644 41.831 24.8905 42.8326C24.8155 42.8334 24.7405 42.835 24.6655 42.835C21.6848 42.8334 18.866 41.9735 16.4585 40.4756ZM26.026 42.7725L25.793 42.4659C25.2735 41.7806 25.2656 40.8535 25.7741 40.1594L26.4208 39.2763C26.9253 38.5878 26.8369 37.6287 26.2162 37.0458C26.1886 37.0194 26.161 36.993 26.1349 36.9658C25.9944 36.8208 25.9423 36.6463 25.9794 36.447C26.0165 36.2476 26.1286 36.1043 26.3118 36.0218C26.5273 35.925 26.7658 35.8361 27.0208 35.7584C27.4283 35.6344 27.7836 35.5807 28.2084 35.5807H31.8018C32.5693 35.5807 33.1939 34.9474 33.1939 34.1693V33.7065C33.1939 33.2382 33.5697 32.8571 34.0316 32.8571C34.3072 32.8571 34.503 32.8835 34.7288 32.9507C35.3802 33.1445 36.1469 33.247 36.9452 33.247C37.7901 33.247 38.5804 33.1333 39.2326 32.9299C37.021 38.3636 31.9313 42.2505 26.026 42.7725ZM24.6655 16.8066C27.2648 16.8066 29.3801 14.6626 29.3801 12.0262C29.3801 9.39062 27.2656 7.24581 24.6655 7.24581C22.0662 7.24581 19.9509 9.38982 19.9509 12.0262C19.9509 14.6626 22.0662 16.8066 24.6655 16.8066ZM24.6655 8.20733C26.7429 8.20733 28.4326 9.92062 28.4326 12.027C28.4326 14.1334 26.7429 15.8467 24.6655 15.8467C22.5881 15.8467 20.8984 14.1334 20.8984 12.027C20.8984 9.92062 22.5881 8.20733 24.6655 8.20733ZM23.3421 18.716L24.2589 20.2684C24.3441 20.4133 24.4989 20.5022 24.6655 20.5022C24.8321 20.5022 24.9861 20.4133 25.0721 20.2684L25.9888 18.716C27.4575 18.4182 28.7966 17.6232 29.7781 16.4607C30.8196 15.227 31.3936 13.6522 31.3936 12.0262C31.3936 8.26498 28.375 5.20508 24.6655 5.20508C20.956 5.20508 17.9374 8.26498 17.9374 12.027C17.9374 13.653 18.5114 15.2278 19.5529 16.4615C20.5344 17.624 21.8735 18.419 23.3421 18.716ZM24.6655 6.1658C27.8531 6.1658 30.4461 8.79498 30.4461 12.027C30.4461 14.9084 28.4145 17.3406 25.6154 17.809C25.478 17.8322 25.358 17.9154 25.2861 18.0363L24.6655 19.0867L24.0449 18.0363C23.973 17.9154 23.853 17.8322 23.7156 17.809C20.9165 17.3406 18.8849 14.9084 18.8849 12.027C18.8849 8.79498 21.4779 6.1658 24.6655 6.1658ZM24.6655 14.8123C25.9888 14.8123 27.069 13.7203 27.0737 12.3785C27.0737 12.2512 27.0248 12.1287 26.9356 12.0382C26.8463 11.9477 26.7263 11.8973 26.6 11.8973H22.731C22.6055 11.8973 22.4846 11.9477 22.3954 12.0382C22.3062 12.1287 22.2565 12.2512 22.2572 12.3785C22.262 13.7211 23.3421 14.8123 24.6655 14.8123ZM26.0449 12.8572C25.8459 13.4353 25.3019 13.8516 24.6655 13.8516C24.0291 13.8516 23.4851 13.4353 23.2861 12.8572H26.0449ZM25.9707 10.5931V10.1032C25.9707 9.83816 26.1831 9.6228 26.4444 9.6228C26.7058 9.6228 26.9182 9.83816 26.9182 10.1032V10.5931C26.9182 10.8581 26.7058 11.0735 26.4444 11.0735C26.1831 11.0735 25.9707 10.8589 25.9707 10.5931ZM22.4128 10.5931V10.1032C22.4128 9.83816 22.6252 9.6228 22.8865 9.6228C23.1479 9.6228 23.3603 9.83816 23.3603 10.1032V10.5931C23.3603 10.8581 23.1479 11.0735 22.8865 11.0735C22.6252 11.0735 22.4128 10.8589 22.4128 10.5931ZM35.0233 24.478C36.1319 24.478 37.0344 23.5629 37.0344 22.4388C37.0344 21.3148 36.1319 20.3997 35.0233 20.3997C33.9147 20.3997 33.0122 21.3148 33.0122 22.4388C33.0122 23.5629 33.914 24.478 35.0233 24.478ZM35.0233 21.3604C35.61 21.3604 36.0869 21.844 36.0869 22.4388C36.0869 23.0337 35.61 23.5172 35.0233 23.5172C34.4367 23.5172 33.9598 23.0337 33.9598 22.4388C33.9598 21.844 34.4367 21.3604 35.0233 21.3604ZM28.1184 20.3997C27.0098 20.3997 26.1073 21.3148 26.1073 22.4388C26.1073 23.5629 27.0098 24.478 28.1184 24.478C29.227 24.478 30.1295 23.5629 30.1295 22.4388C30.1295 21.3148 29.227 20.3997 28.1184 20.3997ZM28.1184 23.5172C27.5317 23.5172 27.0548 23.0337 27.0548 22.4388C27.0548 21.844 27.5317 21.3604 28.1184 21.3604C28.705 21.3604 29.1819 21.844 29.1819 22.4388C29.1819 23.0337 28.7042 23.5172 28.1184 23.5172ZM19.2015 22.4388C19.2015 23.5629 20.104 24.478 21.2126 24.478C22.3212 24.478 23.2237 23.5629 23.2237 22.4388C23.2237 21.3148 22.3212 20.3997 21.2126 20.3997C20.104 20.3997 19.2015 21.314 19.2015 22.4388ZM22.2762 22.4388C22.2762 23.0337 21.7993 23.5172 21.2126 23.5172C20.626 23.5172 20.149 23.0337 20.149 22.4388C20.149 21.844 20.626 21.3604 21.2126 21.3604C21.7993 21.3604 22.2762 21.844 22.2762 22.4388ZM14.3077 24.478C15.4162 24.478 16.3187 23.5629 16.3187 22.4388C16.3187 21.3148 15.4162 20.3997 14.3077 20.3997C13.1991 20.3997 12.2966 21.3148 12.2966 22.4388C12.2966 23.5629 13.1991 24.478 14.3077 24.478ZM14.3077 21.3604C14.8943 21.3604 15.3712 21.844 15.3712 22.4388C15.3712 23.0337 14.8943 23.5172 14.3077 23.5172C13.721 23.5172 13.2441 23.0337 13.2441 22.4388C13.2441 21.844 13.721 21.3604 14.3077 21.3604Z"
              fill="#1079E0"
              stroke="#5479F7"
              stroke-width="0.5"
            />
          </svg>
        );
      case "Title Company":
        return (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 34 31"
            fill="none"
          >
            <path
              d="M27.2277 17.8238C23.7633 17.8238 20.9554 20.6612 20.9554 24.1619C20.9554 27.6627 23.7633 30.5 27.2277 30.5C30.6921 30.5 33.5 27.6627 33.5 24.1619C33.5 20.6612 30.6921 17.8238 27.2277 17.8238ZM30.0047 23.8919L26.9422 26.3842C26.7596 26.5331 26.5312 26.6138 26.2982 26.6138C26.2594 26.6138 26.2206 26.6115 26.1806 26.6069C25.9077 26.5758 25.6588 26.435 25.4898 26.2158L24.2863 24.665C23.9357 24.2127 24.0145 23.5608 24.4598 23.2065C24.9086 22.8523 25.5515 22.9319 25.9031 23.3819L26.4638 24.1054L28.7156 22.2719C29.1586 21.9108 29.8049 21.9846 30.1612 22.43C30.5174 22.8777 30.4478 23.5319 30.0047 23.8919Z"
              fill="#1079E0"
            />
            <path
              d="M19.2426 24.1631C19.2426 19.7138 22.8247 16.0942 27.2277 16.0942C28.6904 16.0942 30.0584 16.5004 31.2391 17.1973V6.81154C31.2391 4.19231 29.1381 2.06923 26.546 2.06923H24.0796V1.53846C24.0796 0.961539 23.6114 0.5 23.0519 0.5C22.481 0.5 22.0242 0.961539 22.0242 1.53846V2.06923H9.7263V1.53846C9.7263 0.961539 9.26955 0.5 8.69862 0.5C8.12768 0.5 7.67093 0.961539 7.67093 1.53846V2.06923H5.19308C2.60104 2.06923 0.5 4.19231 0.5 6.81154V23.8192C0.5 26.4385 2.60104 28.5615 5.19308 28.5615H20.5421C19.7234 27.2946 19.2426 25.7854 19.2426 24.1631ZM23.2586 11.6854C23.914 11.6854 24.445 12.2219 24.445 12.8842C24.445 13.5465 23.914 14.0831 23.2586 14.0831C22.6031 14.0831 22.0722 13.5465 22.0722 12.8842C22.0722 12.2219 22.6031 11.6854 23.2586 11.6854ZM8.48623 20.615C7.8308 20.615 7.29983 20.0785 7.29983 19.4162C7.29983 18.7538 7.8308 18.2173 8.48623 18.2173C9.14166 18.2173 9.67263 18.7538 9.67263 19.4162C9.67263 20.0785 9.14166 20.615 8.48623 20.615ZM8.48623 14.0831C7.8308 14.0831 7.29983 13.5465 7.29983 12.8842C7.29983 12.2219 7.8308 11.6854 8.48623 11.6854C9.14166 11.6854 9.67263 12.2219 9.67263 12.8842C9.67263 13.5465 9.14166 14.0831 8.48623 14.0831ZM15.873 20.615C15.2175 20.615 14.6866 20.0785 14.6866 19.4162C14.6866 18.7538 15.2175 18.2173 15.873 18.2173C16.5284 18.2173 17.0594 18.7538 17.0594 19.4162C17.0594 20.0785 16.5273 20.615 15.873 20.615ZM15.873 14.0831C15.2175 14.0831 14.6866 13.5465 14.6866 12.8842C14.6866 12.2219 15.2175 11.6854 15.873 11.6854C16.5284 11.6854 17.0594 12.2219 17.0594 12.8842C17.0594 13.5465 16.5273 14.0831 15.873 14.0831Z"
              fill="#1079E0"
            />
          </svg>
        );
      case "Real Estate Attorney":
        return (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="35"
            height="35"
            viewBox="0 0 49 49"
            fill="none"
          >
            <path
              d="M33.4275 39.2991H15.9014C13.5392 39.2991 11.6172 37.3773 11.6172 35.015V13.9836C11.6172 11.6214 13.5392 9.69941 15.9014 9.69941H30.9443C31.1436 9.69941 31.3356 9.77595 31.4805 9.91314L37.4689 15.5924C37.6238 15.7395 37.7117 15.9438 37.7117 16.1576V35.0148C37.7116 37.3773 35.7898 39.2991 33.4275 39.2991ZM15.9014 11.2573C14.3981 11.2573 13.1751 12.4803 13.1751 13.9836V35.015C13.1751 36.5184 14.3981 37.7413 15.9014 37.7413H33.4275C34.9309 37.7413 36.1538 36.5184 36.1538 35.015V16.4926L30.6336 11.2573H15.9014Z"
              fill="#1079E0"
            />
            <path
              d="M31.6751 19.7935H17.6542C17.2239 19.7935 16.8752 19.4448 16.8752 19.0146C16.8752 18.5843 17.2239 18.2356 17.6542 18.2356H31.6751C32.1053 18.2356 32.454 18.5843 32.454 19.0146C32.454 19.4449 32.1053 19.7935 31.6751 19.7935Z"
              fill="#1079E0"
            />
            <path
              d="M31.6751 23.3143H17.6542C17.2239 23.3143 16.8752 22.9656 16.8752 22.5353C16.8752 22.1051 17.2239 21.7564 17.6542 21.7564H31.6751C32.1053 21.7564 32.454 22.1051 32.454 22.5353C32.454 22.9656 32.1053 23.3143 31.6751 23.3143Z"
              fill="#1079E0"
            />
            <path
              d="M20.2683 26.8349H17.6542C17.2239 26.8349 16.8752 26.4862 16.8752 26.0559C16.8752 25.6257 17.2239 25.277 17.6542 25.277H20.2683C20.6986 25.277 21.0473 25.6257 21.0473 26.0559C21.0473 26.4862 20.6986 26.8349 20.2683 26.8349Z"
              fill="#1079E0"
            />
            <path
              d="M36.9329 16.9363H32.577C31.2473 16.9363 30.1653 15.8546 30.1653 14.5249V10.4784C30.1653 10.1671 30.3505 9.8856 30.6366 9.7627C30.9229 9.63944 31.2541 9.69889 31.4805 9.91314L37.4689 15.5924C37.7001 15.8118 37.7746 16.1497 37.6565 16.4458C37.5385 16.742 37.2518 16.9363 36.9329 16.9363ZM31.7232 12.2905V14.5249C31.7232 14.9954 32.1062 15.3784 32.577 15.3784H34.9795L31.7232 12.2905Z"
              fill="#1079E0"
            />
            <path
              d="M27.5708 33.3326C26.4164 33.3326 25.3314 32.8832 24.5152 32.0668C22.8302 30.3821 22.8302 27.6403 24.5153 25.9555C25.3314 25.1392 26.4164 24.6897 27.5708 24.6897C28.7252 24.6897 29.8106 25.1392 30.6267 25.9555C32.3114 27.6403 32.3114 30.3821 30.6267 32.0668C29.8106 32.8832 28.7252 33.3326 27.5708 33.3326ZM27.5708 26.2476C26.8327 26.2476 26.1389 26.5352 25.6168 27.057C24.5393 28.1345 24.5393 29.888 25.6168 30.9654C26.1389 31.4872 26.8326 31.7748 27.5708 31.7748C28.309 31.7748 29.0031 31.4872 29.5252 30.9654C30.6023 29.888 30.6023 28.1345 29.5252 27.057C29.0031 26.5352 28.309 26.2476 27.5708 26.2476Z"
              fill="#1079E0"
            />
            <path
              d="M33.4497 35.6692C33.2504 35.6692 33.0511 35.5931 32.899 35.441L29.5249 32.0668C29.2206 31.7626 29.2209 31.2697 29.5252 30.9654C29.8294 30.6611 30.3221 30.6611 30.6264 30.9653L34.0005 34.3394C34.3048 34.6437 34.3048 35.1366 34.0005 35.4409C33.8483 35.5931 33.6491 35.6692 33.4497 35.6692Z"
              fill="#1079E0"
            />
          </svg>
        );
      default:
        return (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="35"
            height="35"
            viewBox="0 0 34 31"
            fill="none"
          >
            <path
              d="M27.2277 17.8238C23.7633 17.8238 20.9554 20.6612 20.9554 24.1619C20.9554 27.6627 23.7633 30.5 27.2277 30.5C30.6921 30.5 33.5 27.6627 33.5 24.1619C33.5 20.6612 30.6921 17.8238 27.2277 17.8238ZM30.0047 23.8919L26.9422 26.3842C26.7596 26.5331 26.5312 26.6138 26.2982 26.6138C26.2594 26.6138 26.2206 26.6115 26.1806 26.6069C25.9077 26.5758 25.6588 26.435 25.4898 26.2158L24.2863 24.665C23.9357 24.2127 24.0145 23.5608 24.4598 23.2065C24.9086 22.8523 25.5515 22.9319 25.9031 23.3819L26.4638 24.1054L28.7156 22.2719C29.1586 21.9108 29.8049 21.9846 30.1612 22.43C30.5174 22.8777 30.4478 23.5319 30.0047 23.8919Z"
              fill="#1079E0"
            />
            <path
              d="M19.2426 24.1631C19.2426 19.7138 22.8247 16.0942 27.2277 16.0942C28.6904 16.0942 30.0584 16.5004 31.2391 17.1973V6.81154C31.2391 4.19231 29.1381 2.06923 26.546 2.06923H24.0796V1.53846C24.0796 0.961539 23.6114 0.5 23.0519 0.5C22.481 0.5 22.0242 0.961539 22.0242 1.53846V2.06923H9.7263V1.53846C9.7263 0.961539 9.26955 0.5 8.69862 0.5C8.12768 0.5 7.67093 0.961539 7.67093 1.53846V2.06923H5.19308C2.60104 2.06923 0.5 4.19231 0.5 6.81154V23.8192C0.5 26.4385 2.60104 28.5615 5.19308 28.5615H20.5421C19.7234 27.2946 19.2426 25.7854 19.2426 24.1631ZM23.2586 11.6854C23.914 11.6854 24.445 12.2219 24.445 12.8842C24.445 13.5465 23.914 14.0831 23.2586 14.0831C22.6031 14.0831 22.0722 13.5465 22.0722 12.8842C22.0722 12.2219 22.6031 11.6854 23.2586 11.6854ZM8.48623 20.615C7.8308 20.615 7.29983 20.0785 7.29983 19.4162C7.29983 18.7538 7.8308 18.2173 8.48623 18.2173C9.14166 18.2173 9.67263 18.7538 9.67263 19.4162C9.67263 20.0785 9.14166 20.615 8.48623 20.615ZM8.48623 14.0831C7.8308 14.0831 7.29983 13.5465 7.29983 12.8842C7.29983 12.2219 7.8308 11.6854 8.48623 11.6854C9.14166 11.6854 9.67263 12.2219 9.67263 12.8842C9.67263 13.5465 9.14166 14.0831 8.48623 14.0831ZM15.873 20.615C15.2175 20.615 14.6866 20.0785 14.6866 19.4162C14.6866 18.7538 15.2175 18.2173 15.873 18.2173C16.5284 18.2173 17.0594 18.7538 17.0594 19.4162C17.0594 20.0785 16.5273 20.615 15.873 20.615ZM15.873 14.0831C15.2175 14.0831 14.6866 13.5465 14.6866 12.8842C14.6866 12.2219 15.2175 11.6854 15.873 11.6854C16.5284 11.6854 17.0594 12.2219 17.0594 12.8842C17.0594 13.5465 16.5273 14.0831 15.873 14.0831Z"
              fill="#1079E0"
            />
          </svg>
        );
    }
  };

  const convertTo12HourFormat = (time) => {
    if (!time) return '';
    const [hours, minutes] = time.split(':');
    const parsedHours = parseInt(hours, 10);
    const ampm = parsedHours >= 12 ? 'PM' : 'AM';
    const twelveHourFormat = parsedHours % 12 || 12;
    return `${twelveHourFormat}:${minutes} ${ampm}`;
  };

  const getBusinessAvailabilityText = (businessType) => {
    switch (businessType) {
      case "Title Abstractor":
        return "Covered Counite";
      case "Real Estate Agent":
        return "Available by appointment";
      case "Title Company":
        return "Remote Closings";
      case "Real Estate Attorney":
        return "Languages Spoken Bilingual ";
      default:
        return "Available by appointment";
    }
  };

  const getBusinessIcon2 = (businessType) => {
    switch (businessType) {
      case "Title Abstractor":
        return <FaBriefcase />;
      case "Title Company":
        return (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="35"
            height="35"
            viewBox="0 0 26 27"
            fill="none"
          >
            <path
              d="M13.0012 26.3012C10.1147 26.3012 8.02837 26.3012 6.34933 26.0762C4.45951 25.8225 3.18415 25.2724 2.20531 24.2971C1.23003 23.3218 0.679878 22.0429 0.426235 20.1531C0.201172 18.474 0.201172 16.3877 0.201172 13.5012C0.201172 10.6147 0.201172 8.52837 0.426235 6.84933C0.679878 4.95951 1.23003 3.68415 2.20531 2.70531C3.18058 1.72646 4.45951 1.17988 6.34933 0.926235C8.02837 0.701172 10.1147 0.701172 13.0012 0.701172C15.8877 0.701172 17.974 0.701172 19.6531 0.926235C21.5429 1.17988 22.8182 1.73003 23.7971 2.70531C24.7724 3.68058 25.3225 4.95951 25.5762 6.84933C25.8012 8.52837 25.8012 10.6147 25.8012 13.5012C25.8012 16.3877 25.8012 18.474 25.5762 20.1531C25.3225 22.0429 24.7724 23.3182 23.7971 24.2971C22.8218 25.2724 21.5429 25.8225 19.6531 26.0762C17.974 26.3012 15.8877 26.3012 13.0012 26.3012ZM13.0012 2.48739C7.64255 2.48739 4.95251 2.48739 3.46995 3.96995C1.98739 5.45251 1.98739 8.14255 1.98739 13.5012C1.98739 18.8598 1.98739 21.5499 3.46995 23.0325C4.95251 24.515 7.64255 24.515 13.0012 24.515C18.3598 24.515 21.0499 24.515 22.5325 23.0325C24.015 21.5499 24.015 18.8598 24.015 13.5012C24.015 8.14255 24.015 5.45251 22.5325 3.96995C21.0499 2.48739 18.3598 2.48739 13.0012 2.48739Z"
              fill="#1079E0"
            />
            <path
              d="M20.1457 20.941H15.3837C14.8907 20.941 14.4906 20.5409 14.4906 20.0479C14.4906 19.5549 14.8907 19.1548 15.3837 19.1548H20.1457C20.6387 19.1548 21.0388 19.5549 21.0388 20.0479C21.0388 20.5409 20.6387 20.941 20.1457 20.941ZM10.025 20.941C9.79639 20.941 9.56776 20.8553 9.39271 20.6802L8.23881 19.5263L7.08134 20.6802C6.73125 21.0303 6.1668 21.0303 5.8167 20.6802C5.4666 20.3301 5.4666 19.7657 5.8167 19.4156L6.9706 18.2617L5.82027 17.1078C5.47018 16.7577 5.47018 16.1933 5.82027 15.8432C6.17037 15.4931 6.73482 15.4931 7.08492 15.8432L8.23881 16.997L9.39271 15.8432C9.74281 15.4931 10.3073 15.4931 10.6573 15.8432C11.0074 16.1933 11.0074 16.7577 10.6573 17.1078L9.49988 18.2617L10.6538 19.4156C11.0039 19.7657 11.0039 20.3301 10.6538 20.6802C10.4823 20.8553 10.2537 20.941 10.025 20.941ZM20.1457 17.3686H15.3837C14.8907 17.3686 14.4906 16.9685 14.4906 16.4755C14.4906 15.9825 14.8907 15.5824 15.3837 15.5824H20.1457C20.6387 15.5824 21.0388 15.9825 21.0388 16.4755C21.0388 16.9685 20.6387 17.3686 20.1457 17.3686ZM8.23881 12.6065C7.74582 12.6065 7.3457 12.2064 7.3457 11.7134V10.2237H5.856C5.363 10.2237 4.96289 9.8236 4.96289 9.33061C4.96289 8.83761 5.363 8.4375 5.856 8.4375H7.3457V6.9478C7.3457 6.4548 7.74582 6.05469 8.23881 6.05469C8.73181 6.05469 9.13192 6.4548 9.13192 6.9478V8.4375H10.6216C11.1146 8.4375 11.5147 8.83761 11.5147 9.33061C11.5147 9.8236 11.1146 10.2237 10.6216 10.2237H9.13192V11.7134C9.13192 12.2064 8.73181 12.6065 8.23881 12.6065ZM20.1457 10.2237H15.3837C14.8907 10.2237 14.4906 9.8236 14.4906 9.33061C14.4906 8.83761 14.8907 8.4375 15.3837 8.4375H20.1457C20.6387 8.4375 21.0388 8.83761 21.0388 9.33061C21.0388 9.8236 20.6387 10.2237 20.1457 10.2237Z"
              fill="#1079E0"
            />
          </svg>
        );
      case "Real Estate Attorney":
        return (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="35"
            height="35"
            viewBox="0 0 34 31"
            fill="none"
          >
            <path
              d="M27.2277 17.8238C23.7633 17.8238 20.9554 20.6612 20.9554 24.1619C20.9554 27.6627 23.7633 30.5 27.2277 30.5C30.6921 30.5 33.5 27.6627 33.5 24.1619C33.5 20.6612 30.6921 17.8238 27.2277 17.8238ZM30.0047 23.8919L26.9422 26.3842C26.7596 26.5331 26.5312 26.6138 26.2982 26.6138C26.2594 26.6138 26.2206 26.6115 26.1806 26.6069C25.9077 26.5758 25.6588 26.435 25.4898 26.2158L24.2863 24.665C23.9357 24.2127 24.0145 23.5608 24.4598 23.2065C24.9086 22.8523 25.5515 22.9319 25.9031 23.3819L26.4638 24.1054L28.7156 22.2719C29.1586 21.9108 29.8049 21.9846 30.1612 22.43C30.5174 22.8777 30.4478 23.5319 30.0047 23.8919Z"
              fill="#1079E0"
            />
            <path
              d="M19.2426 24.1631C19.2426 19.7138 22.8247 16.0942 27.2277 16.0942C28.6904 16.0942 30.0584 16.5004 31.2391 17.1973V6.81154C31.2391 4.19231 29.1381 2.06923 26.546 2.06923H24.0796V1.53846C24.0796 0.961539 23.6114 0.5 23.0519 0.5C22.481 0.5 22.0242 0.961539 22.0242 1.53846V2.06923H9.7263V1.53846C9.7263 0.961539 9.26955 0.5 8.69862 0.5C8.12768 0.5 7.67093 0.961539 7.67093 1.53846V2.06923H5.19308C2.60104 2.06923 0.5 4.19231 0.5 6.81154V23.8192C0.5 26.4385 2.60104 28.5615 5.19308 28.5615H20.5421C19.7234 27.2946 19.2426 25.7854 19.2426 24.1631ZM23.2586 11.6854C23.914 11.6854 24.445 12.2219 24.445 12.8842C24.445 13.5465 23.914 14.0831 23.2586 14.0831C22.6031 14.0831 22.0722 13.5465 22.0722 12.8842C22.0722 12.2219 22.6031 11.6854 23.2586 11.6854ZM8.48623 20.615C7.8308 20.615 7.29983 20.0785 7.29983 19.4162C7.29983 18.7538 7.8308 18.2173 8.48623 18.2173C9.14166 18.2173 9.67263 18.7538 9.67263 19.4162C9.67263 20.0785 9.14166 20.615 8.48623 20.615ZM8.48623 14.0831C7.8308 14.0831 7.29983 13.5465 7.29983 12.8842C7.29983 12.2219 7.8308 11.6854 8.48623 11.6854C9.14166 11.6854 9.67263 12.2219 9.67263 12.8842C9.67263 13.5465 9.14166 14.0831 8.48623 14.0831ZM15.873 20.615C15.2175 20.615 14.6866 20.0785 14.6866 19.4162C14.6866 18.7538 15.2175 18.2173 15.873 18.2173C16.5284 18.2173 17.0594 18.7538 17.0594 19.4162C17.0594 20.0785 16.5273 20.615 15.873 20.615ZM15.873 14.0831C15.2175 14.0831 14.6866 13.5465 14.6866 12.8842C14.6866 12.2219 15.2175 11.6854 15.873 11.6854C16.5284 11.6854 17.0594 12.2219 17.0594 12.8842C17.0594 13.5465 16.5273 14.0831 15.873 14.0831Z"
              fill="#1079E0"
            />
          </svg>
        );
      case "Appraisal Company":
        return (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="35"
            height="35"
            viewBox="0 0 49 49"
            fill="none"
          >
            <path
              d="M38.6017 18.8416V9.40323C38.6017 9.08213 38.3416 8.82258 38.021 8.82258H32.2146C31.8941 8.82258 31.6339 9.08213 31.6339 9.40323V12.5706L25.0547 6.64923C24.9484 6.55342 24.8102 6.5 24.6662 6.5C24.4432 6.5 24.4432 6.5 15.5681 14.4879L6.8584 22.3266C6.73995 22.4329 6.67027 22.5833 6.6662 22.743C6.66214 22.9021 6.72369 23.0559 6.83575 23.1686L8.57769 24.9105C8.79543 25.1271 9.1444 25.1381 9.37433 24.9337L10.7307 23.7283V41.9194C10.7307 42.2405 10.9909 42.5 11.3114 42.5H36.8598V42.4739C36.9498 42.4826 37.038 42.5 37.1292 42.5C38.5814 42.5 39.763 41.319 39.763 39.8668C39.763 39.1636 39.4889 38.5017 38.9913 38.0046L38.6017 37.6145V23.7283L39.9575 24.9337C40.0678 25.0319 40.206 25.0806 40.3436 25.0806C40.4923 25.0806 40.6415 25.0232 40.7541 24.9105L42.4961 23.1686C42.6087 23.0559 42.6703 22.9021 42.6656 22.743C42.6616 22.5839 42.5925 22.4335 42.4734 22.3266L38.6017 18.8416ZM32.7952 9.98387H37.4404V17.7965L32.7952 13.6158V9.98387ZM37.1292 41.3387C36.7355 41.3387 36.3662 41.1854 36.0881 40.9079L31.2937 36.1129L33.3759 34.0307L38.1703 38.8257C38.4484 39.1038 38.6017 39.4737 38.6017 39.8668C38.6017 40.6779 37.9409 41.3387 37.1292 41.3387ZM24.6662 34.371C20.8241 34.371 17.6985 31.2454 17.6985 27.4032C17.6985 23.5611 20.8241 20.4355 24.6662 20.4355C28.5083 20.4355 31.6339 23.5611 31.6339 27.4032C31.6339 31.2454 28.5083 34.371 24.6662 34.371ZM30.8501 32.6662L31.9742 33.7903L31.0533 34.7112L29.9292 33.5871C30.2601 33.3049 30.5679 32.9972 30.8501 32.6662ZM37.4404 36.4532L33.7864 32.7992C33.5687 32.5814 33.1831 32.5814 32.9654 32.7992L32.7952 32.9693L31.5434 31.7174C32.3319 30.4655 32.7952 28.989 32.7952 27.4032C32.7952 22.9206 29.1488 19.2742 24.6662 19.2742C20.1836 19.2742 16.5372 22.9206 16.5372 27.4032C16.5372 31.8858 20.1836 35.5323 24.6662 35.5323C26.2519 35.5323 27.7285 35.0689 28.9804 34.2804L30.2323 35.5323L30.0621 35.7024C29.8351 35.9294 29.8351 36.2964 30.0621 36.5234L34.8774 41.3387H11.892V22.6959L24.6662 11.3414L37.4404 22.6959V36.4532ZM40.3198 23.7022L25.0523 10.1308C24.8323 9.93452 24.5007 9.93452 24.2807 10.1308L9.01259 23.7022L8.09053 22.7801C10.5635 20.5545 22.3692 9.92929 24.6662 7.86219L41.2419 22.7801L40.3198 23.7022Z"
              fill="#1079E0"
            />
            <path
              d="M24.6662 21.5968C21.4645 21.5968 18.8597 24.2015 18.8597 27.4032C18.8597 30.6049 21.4645 33.2097 24.6662 33.2097C27.8678 33.2097 30.4726 30.6049 30.4726 27.4032C30.4726 24.2015 27.8678 21.5968 24.6662 21.5968ZM24.6662 32.0484C22.1049 32.0484 20.021 29.9645 20.021 27.4032C20.021 24.842 22.1049 22.7581 24.6662 22.7581C27.2274 22.7581 29.3113 24.842 29.3113 27.4032C29.3113 29.9645 27.2274 32.0484 24.6662 32.0484Z"
              fill="#1079E0"
            />
            <path
              d="M24.6662 25.6613C24.9861 25.6613 25.2468 25.9214 25.2468 26.2419H26.4081C26.4081 25.4859 25.9209 24.8472 25.2468 24.6068V23.9194H24.0855V24.6068C23.4114 24.8472 22.9242 25.4859 22.9242 26.2419C22.9242 27.2023 23.7058 27.9839 24.6662 27.9839C24.9861 27.9839 25.2468 28.244 25.2468 28.5645C25.2468 28.885 24.9861 29.1452 24.6662 29.1452C24.3462 29.1452 24.0855 28.885 24.0855 28.5645H22.9242C22.9242 29.3205 23.4114 29.9592 24.0855 30.1996V30.8871H25.2468V30.1996C25.9209 29.9592 26.4081 29.3205 26.4081 28.5645C26.4081 27.6041 25.6265 26.8226 24.6662 26.8226C24.3462 26.8226 24.0855 26.5625 24.0855 26.2419C24.0855 25.9214 24.3462 25.6613 24.6662 25.6613Z"
              fill="#1079E0"
            />
          </svg>
        );
      case "Surveyor Company":
        return (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="35"
            height="35"
            viewBox="0 0 49 49"
            fill="none"
          >
            <path
              d="M18.572 15.1274C18.6893 15.045 18.7407 14.9028 18.6967 14.7681C18.66 14.6333 18.5353 14.536 18.396 14.5435H13.534V12.8219C13.534 12.6422 13.3873 12.5 13.2187 12.5C13.138 12.5 13.0647 12.5299 13.006 12.5898L8.26868 17.1409C8.20268 17.2008 8.16602 17.2906 8.16602 17.3804C8.16602 17.4703 8.20268 17.5526 8.26135 17.62L13.006 22.1636C13.0647 22.2235 13.1453 22.2534 13.226 22.2534C13.27 22.2534 13.314 22.2459 13.3507 22.2235C13.468 22.1711 13.5413 22.0588 13.5413 21.9315V20.2099H14.2673C14.392 20.2099 14.5093 20.1351 14.5533 20.0153C15.4113 18.0242 16.8047 16.325 18.572 15.1274ZM41.0633 31.393L36.326 26.8419C36.194 26.7222 35.996 26.7296 35.8787 26.8569C35.8273 26.9168 35.798 26.9916 35.7907 27.074V28.7881H35.0647C34.94 28.7881 34.8227 28.863 34.7787 28.9827C33.928 30.9738 32.5347 32.6655 30.76 33.8632C30.6427 33.9455 30.5913 34.0877 30.6353 34.2225C30.672 34.3572 30.7967 34.4545 30.936 34.447H35.7907V36.1761C35.7907 36.3034 35.864 36.4232 35.9813 36.4756C36.018 36.4905 36.062 36.5055 36.106 36.498C36.1867 36.498 36.2673 36.4681 36.326 36.4082L41.0633 31.8571C41.1293 31.7972 41.166 31.7074 41.166 31.6176C41.166 31.5352 41.1293 31.4529 41.0633 31.393ZM22.4587 20.8237C21.784 21.5198 21.784 22.6426 22.466 23.3313C22.7887 23.6606 23.2287 23.8478 23.6907 23.8478H24.0353V20.3072H23.6833C23.2213 20.3072 22.7813 20.4943 22.4587 20.8237ZM25.304 28.6908H25.656C26.6167 28.7207 27.416 27.9423 27.438 26.9617C27.4673 25.9811 26.7047 25.1652 25.744 25.1427C25.7147 25.1427 25.678 25.1427 25.6487 25.1427H25.2967V28.6908H25.304ZM34.4267 24.499C34.4267 18.9973 30.056 14.536 24.666 14.536C19.276 14.536 14.9053 18.9973 14.9053 24.499C14.9053 30.0007 19.276 34.462 24.666 34.462C30.056 34.4545 34.4193 30.0007 34.4267 24.499ZM25.6487 23.8478C27.306 23.8104 28.6773 25.1577 28.714 26.8494C28.7507 28.5411 27.4307 29.9409 25.7733 29.9783C25.7293 29.9783 25.6927 29.9783 25.6487 29.9783H25.304V30.8765C25.304 31.2358 25.018 31.5277 24.666 31.5277C24.314 31.5277 24.028 31.2358 24.028 30.8765V29.9783H21.3073C20.9553 29.9783 20.6693 29.6863 20.6693 29.3271C20.6693 28.9678 20.9553 28.6758 21.3073 28.6758H24.028V25.1353H23.676C22.0187 25.1727 20.6473 23.8253 20.6107 22.1336C20.574 20.4419 21.894 19.0422 23.5513 19.0048H23.676H24.028V18.1065C24.028 17.7472 24.314 17.4553 24.666 17.4553C25.018 17.4553 25.304 17.7472 25.304 18.1065V19.0048H28.0247C28.3767 19.0048 28.6627 19.2967 28.6627 19.656C28.6627 20.0153 28.3767 20.3072 28.0247 20.3072H25.304V23.8478H25.6487Z"
              fill="#1079E0"
            />
          </svg>
        );
      default:
        return (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="35"
            height="35"
            viewBox="0 0 34 31"
            fill="none"
          >
            <path
              d="M27.2277 17.8238C23.7633 17.8238 20.9554 20.6612 20.9554 24.1619C20.9554 27.6627 23.7633 30.5 27.2277 30.5C30.6921 30.5 33.5 27.6627 33.5 24.1619C33.5 20.6612 30.6921 17.8238 27.2277 17.8238ZM30.0047 23.8919L26.9422 26.3842C26.7596 26.5331 26.5312 26.6138 26.2982 26.6138C26.2594 26.6138 26.2206 26.6115 26.1806 26.6069C25.9077 26.5758 25.6588 26.435 25.4898 26.2158L24.2863 24.665C23.9357 24.2127 24.0145 23.5608 24.4598 23.2065C24.9086 22.8523 25.5515 22.9319 25.9031 23.3819L26.4638 24.1054L28.7156 22.2719C29.1586 21.9108 29.8049 21.9846 30.1612 22.43C30.5174 22.8777 30.4478 23.5319 30.0047 23.8919Z"
              fill="#1079E0"
            />
            <path
              d="M19.2426 24.1631C19.2426 19.7138 22.8247 16.0942 27.2277 16.0942C28.6904 16.0942 30.0584 16.5004 31.2391 17.1973V6.81154C31.2391 4.19231 29.1381 2.06923 26.546 2.06923H24.0796V1.53846C24.0796 0.961539 23.6114 0.5 23.0519 0.5C22.481 0.5 22.0242 0.961539 22.0242 1.53846V2.06923H9.7263V1.53846C9.7263 0.961539 9.26955 0.5 8.69862 0.5C8.12768 0.5 7.67093 0.961539 7.67093 1.53846V2.06923H5.19308C2.60104 2.06923 0.5 4.19231 0.5 6.81154V23.8192C0.5 26.4385 2.60104 28.5615 5.19308 28.5615H20.5421C19.7234 27.2946 19.2426 25.7854 19.2426 24.1631ZM23.2586 11.6854C23.914 11.6854 24.445 12.2219 24.445 12.8842C24.445 13.5465 23.914 14.0831 23.2586 14.0831C22.6031 14.0831 22.0722 13.5465 22.0722 12.8842C22.0722 12.2219 22.6031 11.6854 23.2586 11.6854ZM8.48623 20.615C7.8308 20.615 7.29983 20.0785 7.29983 19.4162C7.29983 18.7538 7.8308 18.2173 8.48623 18.2173C9.14166 18.2173 9.67263 18.7538 9.67263 19.4162C9.67263 20.0785 9.14166 20.615 8.48623 20.615ZM8.48623 14.0831C7.8308 14.0831 7.29983 13.5465 7.29983 12.8842C7.29983 12.2219 7.8308 11.6854 8.48623 11.6854C9.14166 11.6854 9.67263 12.2219 9.67263 12.8842C9.67263 13.5465 9.14166 14.0831 8.48623 14.0831ZM15.873 20.615C15.2175 20.615 14.6866 20.0785 14.6866 19.4162C14.6866 18.7538 15.2175 18.2173 15.873 18.2173C16.5284 18.2173 17.0594 18.7538 17.0594 19.4162C17.0594 20.0785 16.5273 20.615 15.873 20.615ZM15.873 14.0831C15.2175 14.0831 14.6866 13.5465 14.6866 12.8842C14.6866 12.2219 15.2175 11.6854 15.873 11.6854C16.5284 11.6854 17.0594 12.2219 17.0594 12.8842C17.0594 13.5465 16.5273 14.0831 15.873 14.0831Z"
              fill="#1079E0"
            />
          </svg>
        );
    }
  };

  const getBusinessAvailabilityText2 = (businessType) => {
    switch (businessType) {
      case "Title Abstractor":
        return "E & O";
      case "Real Estate Agent":
        return "Available by appointment";
      case "Title Company":
        return "Rate calculator ";
      case "Real Estate Attorney":
        return "Available by appointment ";
      case "Appraisal Company":
        return "Appraisal/Month ";
      case "Surveyor Company":
        return "Survey Per Month";
      default:
        return "-";
    }
  };
  
  return (
    <div className="min-h-screen flex flex-col bg-gray-100">
      {/* Header */}
      <div className="hidden lg:block">
        <Navbar />
      </div>
      <div className="block lg:hidden">
        <TopHeader />
      </div>
      <div className="flex items-center gap-3 mt-3">
        {/* {showModal && <ContactAgentModal onClose={() => setShowModal(false)} />} */}
        {/* Left Arrow */}
        <HiArrowLeft
          className="text-[40px] rounded-xl text-gray-600 cursor-pointer ms-10 border p-2"
          onClick={() => navigate("/Listing")}
        />

        {/* Centered Text with Breadcrumb */}
        <div className="flex flex-col items-center flex-1">
          <p className="text-[22px] font-semibold">{data.business_name}</p>

          {/* Breadcrumb */}
          <p className="text-gray-500 text-[12px] mt-1">
            <span className="text-gray-600">Listing</span>
            <span className="mx-2 text-gray-400"> &gt; </span>
            <span className="text-gray-600">{data.business_name}</span>
          </p>
        </div>
      </div>

      <div className="relative mt-[10px] mx-5 mb-3">
        {/* Background Image */}
        <div
          className="absolute inset-0 bg-cover bg-center rounded-[15px]"
          style={{
            backgroundImage: data.cover_image
              ? `url(${imgUrl}${data.cover_image})`
              : "",
            height: "250px",
          }}
        ></div>

        {/* Content Container */}
        <div className="relative  z-1 mx-auto px-4 max-[425px]:px-0 md:px-8 py-[130px] pb-[30px]  rounded-t-2xl ">
          {/* Agent Profile & Details */}
          <div className="grid grid-cols-1 xl:grid-cols-12 gap-[32px]">
            {/* Agent Profile */}
            <div className="bg-white p-6 rounded-[30px] shadow-lg xl:col-span-4 2xl:col-span-4 xl:h-[770px]">
              <div className="flex flex-col hidden xl:block text-center">
                <div className="flex flex-col items-center">
                  {/* Circular Image */}
                  <div className="relative">
                    <img
                      //src={Profile} // Yahan apni image ka path lagayein
                      src={
                        [
                          "Title Abstractor",
                          "Title Company",
                          "Real Estate Agent",
                        ].includes(data.business_type)
                          ? data.company_logo
                            ? `${imgUrl}${data.company_logo}`
                            : ""
                          : data.cover_image
                            ? `${imgUrl}${data.cover_image}`
                            : ""
                      }
                      alt="Profile"
                      className="w-[220px] h-[220px] object-cover rounded-full border-4 border-white "
                    />

                    {/* Bottom Badge */}
                    {![
                      "Title Abstractor",
                      "Title Company",
                      "Real Estate Agent",
                    ].includes(data.business_type) && (
                        <div className="absolute left-1/2 2xl:-bottom-6 w-[150px] xl:-bottom-3 transform -translate-x-1/2 bg-white px-4 py-2 rounded-lg shadow-md">
                          <img
                            src={
                              data.company_logo
                                ? `${imgUrl}${data.company_logo}`
                                : ""
                            } // Yahan niche wali image ka path lagayein
                            alt="Logo"
                            className="xl:h-[40px] mx-auto"
                          />
                        </div>
                      )}
                  </div>
                </div>

                <div className="text-start items-start">
                  {" "}
                  <p className="mt-4 text-[24px] font-bold">
                    {data.business_name}
                  </p>
                  <h2 className="mt-2 text-[14px] flex gap-[4px] ">
                    {data.first_name} {data.last_name}
                    <span className="">
                      <RiVerifiedBadgeFill
                        size={20}
                        className="text-[#109138]"
                      />
                    </span>
                  </h2>
                  <p
                    className="text-[14px] font-normal rounded-[10px] mt-3 bg-[#F76C5E] text-white py-[4px] px-[10px] w-[203px] text-center"
                    style={{
                      backgroundColor:
                        data.business_type === "Title Abstractor"
                          ? "#1079E0"
                          : data.business_type === "Title Company"
                            ? "#33BA33"
                            : data.business_type === "Real Estate Agent"
                              ? "#F76C5E"
                              : data.business_type === "Real Estate Attorney"
                                ? "#1E3A5F"
                                : data.business_type === "Appraisal Company"
                                  ? "#E8A317"
                                  : "#6A0572",
                    }}
                  >
                    {data.business_type}
                  </p>
                  <span className=" inline-block text-[#6C6C6C] mt-3 text-[12px]">
                    {data.short_bio}
                  </span>
                  <div>
                    <button
                      className="bg-blue-500 text-white rounded-[10px] text-[13px] py-[7px] px-[24px] hover:bg-blue-700 mt-[20px]"
                      onClick={() => setShowModal(true)}
                    >
                      Contact Agent
                    </button>
                  </div>
                  {showModal && <ParentComponent />}
                  <p className="mt-4 text-[20px] mt-6 pt-4 font-semibold border-t">
                    Contact Details
                  </p>
                  <div className="flex gap-5 text-white mt-6">
                    <div className="bg-[#1079E0] px-4 py-2 rounded-[9px] flex-1">
                      <p className="text-[12px]">Response time</p>
                      <div className="flex justify-between items-center gap-2">
                        <p className="text-[18px]">1 day</p>
                        <AiOutlineFieldTime className="text-[38px]" />
                      </div>
                    </div>

                    <div className="bg-[#1057A9] px-4 py-2 rounded-[9px] flex-1">
                      <p className="text-[12px]">Response rate</p>
                      <div className="flex justify-between items-center gap-2">
                        <p className="text-[18px]">100%</p>
                        <svg width="45" height="32" viewBox="0 0 45 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M6.90185 17.1616V29.818C6.90185 30.7642 6.13467 31.5315 5.18841 31.5315C4.24214 31.5315 3.47496 30.7643 3.47496 29.818V20.3405L2.65589 20.8796C2.36557 21.0703 2.03848 21.1615 1.71553 21.1615C1.1583 21.1615 0.612047 20.8905 0.282422 20.3901C-0.237961 19.5995 -0.018797 18.537 0.771867 18.0166L4.24636 15.7301C4.24671 15.7307 4.24699 15.7311 4.24734 15.7316C4.51762 15.5534 4.84043 15.4481 5.18841 15.4481C6.13467 15.4481 6.90185 16.2153 6.90185 17.1616ZM19.7879 20.7498V26.2297C19.7879 29.1529 17.4094 31.5314 14.4862 31.5314C11.563 31.5314 9.18448 29.1529 9.18448 26.2297V20.7498C9.18448 17.8267 11.563 15.4481 14.4862 15.4481C17.4094 15.4481 19.7879 17.8267 19.7879 20.7498ZM16.3611 20.7498C16.3611 19.7158 15.5203 18.875 14.4862 18.875C13.4521 18.875 12.6113 19.7158 12.6113 20.7498V26.2297C12.6113 27.2638 13.4521 28.1046 14.4862 28.1046C15.5203 28.1046 16.3611 27.2638 16.3611 26.2297V20.7498ZM32.674 20.7498V26.2297C32.674 29.1529 30.2955 31.5314 27.3723 31.5314C24.4491 31.5314 22.0706 29.1529 22.0706 26.2297V20.7498C22.0706 17.8267 24.4491 15.4481 27.3723 15.4481C30.2955 15.4481 32.674 17.8267 32.674 20.7498ZM29.2472 20.7498C29.2472 19.7158 28.4064 18.875 27.3723 18.875C26.3382 18.875 25.4974 19.7158 25.4974 20.7498V26.2297C25.4974 27.2638 26.3382 28.1046 27.3723 28.1046C28.4064 28.1046 29.2472 27.2638 29.2472 26.2297V20.7498ZM38.8546 30.4689L44.0559 17.8125C44.4156 16.9374 43.9982 15.9367 43.1222 15.577C42.2479 15.2165 41.2456 15.6356 40.8868 16.5107L35.6855 29.1672C35.3257 30.0423 35.7432 31.0429 36.6191 31.4026C36.8316 31.4904 37.0526 31.5323 37.2692 31.5323C37.9436 31.5323 38.5827 31.1315 38.8546 30.4689ZM38.1677 17.9564C38.1677 18.9027 37.4006 19.6698 36.4543 19.6698C35.508 19.6698 34.7409 18.9027 34.7409 17.9564C34.7409 17.0101 35.508 16.243 36.4543 16.243C37.4006 16.243 38.1677 17.0101 38.1677 17.9564ZM45 29.0234C45 29.9696 44.2329 30.7367 43.2866 30.7367C42.3403 30.7367 41.5732 29.9696 41.5732 29.0234C41.5732 28.0771 42.3403 27.3099 43.2866 27.3099C44.2329 27.31 45 28.0771 45 29.0234ZM28.8771 2.89257C28.2342 2.4939 26.6914 2.63544 25.2256 3.39397C27.0642 6.49257 26.5885 10.4397 25.277 12.4197C26.6528 12.0854 28.2599 11.1725 29.2113 9.61684C30.8184 6.9939 29.9442 3.54824 28.8771 2.89257ZM24.0684 3.94677C22.0756 0.681104 17.7428 -0.296098 16.4185 0.513902C15.0942 1.33677 14.0142 5.61824 16.007 8.8839C17.7556 11.751 21.2913 12.8568 23.027 12.5354L19.4784 6.74964C19.2984 6.4539 19.3884 6.0553 19.697 5.8753C19.9926 5.6825 20.3912 5.78537 20.5841 6.08103L24.1198 11.8539C25.1999 10.4397 25.8171 6.8011 24.0684 3.94677Z" fill="#F7FBFE"/>
                        </svg>
                      </div>
                    </div>
                  </div>
                  <div className="bg-[#F9FAFB] p-4 mt-6 rounded-xl shadow-md border">
                    <div className="flex items-start space-x-3">
                      {/* Left Side: Icons with Dotted Line */}
                      <div className="relative flex flex-col items-center">
                        {/* Blue Location Icon */}
                        <svg width="64" height="65" viewBox="0 0 64 65" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <g clip-path="url(#clip0_26337_49724)">
                          <path d="M11.7583 0.888672C5.27475 0.888672 0 6.16342 0 12.6469C0 17.0729 2.50087 21.1255 6.41775 23.1245L10.2096 28.9702C10.55 29.4949 11.133 29.8117 11.7584 29.8117C12.3839 29.8117 12.9668 29.495 13.3071 28.9702L17.0989 23.1245C21.0156 21.1255 23.5166 17.0729 23.5166 12.6469C23.5164 6.16342 18.2419 0.888672 11.7583 0.888672ZM11.7583 15.8955C9.96688 15.8955 8.5095 14.4382 8.5095 12.6468C8.5095 10.8554 9.96688 9.39817 11.7583 9.39817C13.5495 9.39817 15.0069 10.8555 15.0069 12.6469C15.0069 14.4383 13.5495 15.8955 11.7583 15.8955Z" fill="#6E76E5"/>
                          <path d="M32.0094 53.1328C31.0272 53.1328 30.2101 52.3587 30.1664 51.3677C30.1572 51.1575 30.1526 50.9443 30.1526 50.7341V48.9708C30.1526 47.9512 30.9792 47.1247 31.9987 47.1247C33.0182 47.1247 33.8448 47.9513 33.8448 48.9708V50.7341C33.8448 50.8905 33.8483 51.0493 33.8552 51.2056C33.8999 52.2242 33.1104 53.0862 32.0918 53.131C32.0643 53.1322 32.0368 53.1328 32.0094 53.1328ZM31.9987 43.8687C30.9791 43.8687 30.1526 43.0421 30.1526 42.0226V40.2726C30.1527 40.1126 30.1491 39.9507 30.1417 39.7905C30.0953 38.772 30.8834 37.9086 31.9021 37.8623C32.9176 37.8152 33.7839 38.6041 33.8302 39.6227C33.8401 39.8393 33.8449 40.0585 33.8448 40.2738V42.0226C33.8448 43.0422 33.0183 43.8687 31.9987 43.8687ZM29.7793 35.0647C29.1976 35.0647 28.6249 34.7903 28.2658 34.2777C27.8897 33.741 27.4609 33.2368 26.9912 32.7792C26.2608 32.0677 26.2457 30.8988 26.9573 30.1686C27.6688 29.4381 28.8377 29.4232 29.5679 30.1346C30.2023 30.7527 30.7816 31.4338 31.2897 32.159C31.8748 32.994 31.6722 34.1452 30.8372 34.7303C30.5147 34.9561 30.1452 35.0647 29.7793 35.0647ZM22.2351 30.0743C22.1093 30.0743 21.9817 30.0615 21.8536 30.0346C21.2153 29.9006 20.5582 29.8261 19.9001 29.8132C18.8806 29.7932 18.0704 28.9508 18.0902 27.9313C18.1098 26.9242 18.9326 26.1211 19.9352 26.1211C19.9474 26.1211 19.9596 26.1212 19.9718 26.1215C20.8604 26.1388 21.7488 26.2395 22.6126 26.4211C23.6102 26.6307 24.2493 27.6095 24.0398 28.6073C23.8573 29.4771 23.0898 30.0743 22.2351 30.0743Z" fill="#D6D5D8"/>
                          <path d="M52.2425 35.9648C45.7589 35.9648 40.4844 41.2396 40.4844 47.7231C40.4844 52.1491 42.9853 56.2017 46.9021 58.2008L50.6939 64.0463C51.0343 64.5711 51.6173 64.8878 52.2426 64.8878C52.868 64.8878 53.451 64.5711 53.7914 64.0463L57.5833 58.2007C61.4999 56.2017 64.0008 52.1491 64.0008 47.7232C64.0008 41.2396 58.726 35.9648 52.2425 35.9648ZM52.2425 50.9718C50.4513 50.9718 48.9939 49.5145 48.9939 47.7231C48.9939 45.9318 50.4513 44.4745 52.2425 44.4745C54.0339 44.4745 55.4913 45.9318 55.4913 47.7231C55.4911 49.5145 54.0339 50.9718 52.2425 50.9718Z" fill="#FF5035"/>
                          <path d="M11.7578 0.888672V9.39817C13.5491 9.39817 15.0064 10.8555 15.0064 12.6469C15.0064 14.4383 13.5491 15.8957 11.7578 15.8957V29.8117C12.3833 29.8117 12.9662 29.495 13.3066 28.9702L17.0983 23.1245C21.0151 21.1255 23.5161 17.0729 23.5161 12.6469C23.5159 6.16342 18.2414 0.888672 11.7578 0.888672Z" fill="#4D59C1"/>
                          <path d="M52.2422 35.9648V44.4745C54.0334 44.4745 55.4908 45.9318 55.4908 47.7231C55.4908 49.5143 54.0334 50.9717 52.2422 50.9718V64.888C52.8677 64.888 53.4506 64.5712 53.7908 64.0465L57.5827 58.2008C61.4996 56.2017 64.0004 52.1491 64.0004 47.7232C64.0004 41.2396 58.7257 35.9648 52.2422 35.9648Z" fill="#F0204B"/>
                          <path d="M32.0078 37.8633V43.8688C33.0246 43.8654 33.8479 43.0405 33.8479 42.0229V40.2743C33.8481 40.0589 33.8432 39.8398 33.8333 39.6232C33.7887 38.6393 32.9783 37.872 32.0078 37.8633Z" fill="#C2C3C9"/>
                          <path d="M32.0078 47.127V53.1325C33.0246 53.1291 33.8479 52.3042 33.8479 51.2866V49.5378C33.8481 49.3225 33.8432 49.1033 33.8333 48.8867C33.7887 47.903 32.9783 47.1357 32.0078 47.127Z" fill="#C2C3C9"/>
                          <path d="M35.71 61.387C35.245 61.387 34.7796 61.2125 34.4206 60.8622C33.7866 60.2434 33.2079 59.5617 32.7004 58.8357C32.1162 57.9999 32.3201 56.8489 33.1557 56.2648C33.9914 55.6808 35.1426 55.8844 35.7266 56.7202C36.1021 57.2573 36.5304 57.7618 36.9995 58.2197C37.7292 58.9318 37.7435 60.1007 37.0314 60.8303C36.6695 61.2009 36.1899 61.387 35.71 61.387Z" fill="#C2C3C9"/>
                          <path d="M44.0502 64.8853C44.0374 64.8853 44.0244 64.8852 44.0116 64.8849C43.1233 64.8667 42.2351 64.7649 41.3714 64.5827C40.3739 64.3721 39.7358 63.3927 39.9464 62.3949C40.1571 61.3974 41.1364 60.7594 42.1342 60.9698C42.7724 61.1045 43.4296 61.1798 44.0876 61.1933C45.1069 61.2142 45.9162 62.0575 45.8953 63.077C45.8746 64.0837 45.0521 64.8853 44.0502 64.8853Z" fill="#C2C3C9"/>
                          </g>
                          <defs>
                          <clipPath id="clip0_26337_49724">
                          <rect width="64" height="64" fill="white" transform="translate(0 0.888672)"/>
                          </clipPath>
                          </defs>
                        </svg>
                      </div>

                      {/* Address Info */}
                      <div>
                        <a href={`https://www.google.com/maps/search/?api=1&query=${data.business_address}`} target="blank">
                          <h3 className="font-semibold text-[20px]">
                            Get Direction
                          </h3>
                          <p className="text-gray-500 text-[13px]">
                            {data.business_address}
                          </p>
                        </a>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div className="flex flex-col xl:hidden ">
                <div className="sm:flex text-center sm:text-start  sm:border-b sm:pb-6">
                  <div className="mx-auto">
                    <div className="relative">
                      <img
                        src={Profile} // Yahan apni image ka path lagayein
                        alt="Profile"
                        className="w-[450px] h-[292px]  md:w-[700px] lg:w-[450px] object-cover rounded-full border-4 border-white "
                      />

                      {/* Bottom Badge */}
                      <div className="absolute left-1/2 -bottom-4 transform -translate-x-1/2 bg-white px-4 py-2 rounded-lg shadow-md">
                        <img
                          src="https://s3-alpha-sig.figma.com/img/89e5/4dfa/9fde3125ffa394476c8c9635de6e3668?Expires=1741564800&Key-Pair-Id=APKAQ4GOSFWCW27IBOMQ&Signature=hZOrcmZwM3XboQciPnYZrDA0GB2p6xHUs79~CGbHNLq02gMOYr3rHl04fo6SaoCmV63CH3cFnmKsLR2ywVOfbwMKaJvBPC1BbHSqWZNMIf7~w~4xtgMQ~TVK3bljk3QEQcKd~Ur50nKk6eSutpVV~ZOLWlP5wDBrYZPzb3aJE-5V9EnEf6zLq2AsjNt9h4FtQy1jbKFZ3ZLS-9zvkuGsK1sfA8iK8qeO8P4DsEwKh15uAfQRU0pfo8ZXLc5Jds5J1xZTGa37B3~5iBiLlRn0A38LAZBvke0Y32Bu12bAGT68TUqv65MXULoFr0kUDNatbOqb6~lU0fczgDaK8AxCOg__" // Yahan niche wali image ka path lagayein
                          alt="Logo"
                          className="w-20 h-[50px] "
                        />
                      </div>
                    </div>
                  </div>

                  <div className="ms-10 max-[425px]:ms-0">
                    {" "}
                    <p className="mt-4 text-[32px] max-[1440px]:text-[26px] font-bold">
                      Gabrielaa
                    </p>
                    <h2 className="mt-2 text-[24px] max-[425px]:text-center max-[425px]:ms-0 max-[1440px]:text-[20px] font-semibold flex gap-[4px] ">
                      Gabriela Agostinelli{" "}
                      <span className="">
                        <RiVerifiedBadgeFill
                          size={25}
                          className="text-[#109138]"
                        />
                      </span>
                    </h2>
                    <p className="text-[24px] max-[425px]:text-center max-[1440px]:text-[20px] rounded-[10px] mt-3 bg-[#F76C5E] text-white py-[4px] px-[14px] w-[203px] h-[40px] text-center">
                      Real Estate Agent
                    </p>
                    <span className="mt-2 inline-block text-[#6C6C6C]  pb-6 mt-4 text-[18px] max-[1440px]:text-[16px]">
                      Lorem Ipsum is simply dummy text of the printing and
                      typesetting industry. Lorem Ipsum...
                    </span>
                  </div>
                </div>
                <div className="text-start items-start">
                  {" "}
                  <p className="mt-4 text-[30px]  max-[1440px]:text-[24px] font-semibold">
                    Contact Details
                  </p>
                  <div className="flex flex-wrap gap-5 text-white mt-6">
                    <div className="bg-[#1079E0] px-4 py-2 rounded-[9px] flex-1  w-full max-[425px]:w-auto">
                      <p className="text-[18px]  max-[1440px]:text-[16px]">
                        Response time
                      </p>
                      <div className="flex justify-between items-center gap-2">
                        <p className="text-[24px]  max-[1440px]:text-[22px]  max-[425px]:text-[16px]">
                          1 day
                        </p>
                        <AiOutlineFieldTime className="text-[30px] max-[1440px]:text-[40px]  max-[425px]:text-[25px]" />
                      </div>
                    </div>

                    <div className="bg-[#1057A9] px-4 py-2 rounded-[9px] flex-1  w-full max-[425px]:w-auto">
                      <p className="text-[18px] max-[1440px]:text-[16px]">
                        Response rate
                      </p>
                      <div className="flex justify-between items-center gap-2">
                        <p className="text-[24px]  max-[1440px]:text-[22px]  max-[425px]:text-[16px]">
                          100 %
                        </p>
                        <img
                          src={listing_eco}
                          className="w-[80px] h-[40px]"
                        ></img>
                      </div>
                    </div>
                    <div className="bg-[#F9FAFB] p-4 rounded-xl shadow-md border  w-full max-[425px]:w-auto">
                      <div className="flex items-start space-x-3">
                        {/* Left Side: Icons with Dotted Line */}
                        <div className="relative flex flex-col items-center">
                          {/* Blue Location Icon */}
                          <FaMapMarkerAlt className="text-blue-600 text-lg" />

                          {/* Dotted Line (SVG) */}
                          <svg height="20" width="2" className="my-1">
                            <line
                              x1="1"
                              y1="0"
                              x2="1"
                              y2="20"
                              stroke="gray"
                              strokeDasharray="3,3"
                              strokeWidth="1"
                            />
                          </svg>

                          {/* Red Location Icon */}
                          <FaMapMarkerAlt className="text-red-500 text-lg" />
                        </div>

                        {/* Address Info */}
                        <div>
                          <h3 className="font-semibold text-black text-[24px]  max-[1440px]:text-[20px]">
                            Get Direction
                          </h3>
                          <p className="text-gray-500 text-[18px]  max-[1440px]:text-[16px]">
                            1649 Colorado Blvd, Los Angeles, CA 90041, US
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                  <button
                    className="w-full bg-blue-500 text-white rounded-[10px] py-[14px] px-[24px] hover:bg-blue-700 mt-[20px]"
                    onClick={() => setShowModal(true)}
                  >
                    Contact Agent
                  </button>
                  {/* {showModal && (
                    <ContactAgentModal onClose={() => setShowModal(false)} />
                  )} */}
                </div>
              </div>
            </div>

            {/* Agent Stats & Services */}
            <div className="bg-white p-6 rounded-[30px] shadow-lg xl:col-span-8 2xl:col-span-8">
              <h3 className="text-[20px] max-[1440px]:text-[20px] pl-0 p-4 leading-[36px] font-semibold">
                Know Your {data.business_type}
              </h3>
              <div className="grid grid-cols-4 max-[425px]:grid-cols-1 max-[1440px]:grid-cols-4 gap-2 py-3 bg-[#F9FAFB] border rounded-2xl">
                <div className="flex items-center gap-2 p-2 w-full border-r">
                  <span className="text-[24px] rounded-full shadow-[0px_0px_42.5px_0px_#00000033] p-2 text-[var(--primary-color)] bg-[var(--white-color)]">
                    <TbPasswordUser />
                  </span>

                  <div className=" font-semibold text-[14px]">
                    {" "}
                    <p className="text-center">Years in Business</p>
                    <p className="text-[18px] text-center">{data.year_experience ?? 0}</p>
                  </div>
                </div>
                <div className="flex items-center gap-2 p-2 w-full border-r">
                  <span className="text-[24px] rounded-full shadow-[0px_0px_42.5px_0px_#00000033] p-2 text-[var(--primary-color)] bg-[var(--white-color)]">
                    {getBusinessIcon(data.business_type)}{" "}
                  </span>
                  <div className=" font-semibold text-[14px]">
                    <p className="text-center">{getBusinessAvailabilityText(data.business_type)}</p>
                    <p className="text-[18px] text-center">{ data?.listingcounty?.length }+</p>
                  </div>
                </div>
                <div className="flex items-center gap-2 p-2 w-full border-r">
                  <span className="text-[20px] rounded-full shadow-[0px_0px_42.5px_0px_#00000033] p-2 text-[var(--primary-color)] bg-[var(--white-color)]">
                    {getBusinessIcon2(data.business_type)}
                  </span>
                  <div className=" font-semibold text-[14px]">
                    <p className="text-center">{getBusinessAvailabilityText2(data.business_type)}</p>
                    <p className="text-[18px] text-center">{ data?.ListingDetail?.e_o_insurance == 1 ? 'Yes' : "No" }</p>
                  </div>
                </div>
                <div className="flex items-center gap-2 p-2 w-full">
                  {data.review_platform}
                  <span className="text-[24px] rounded-full shadow-[0px_0px_42.5px_0px_#00000033] p-2 text-[var(--primary-color)] bg-[var(--white-color)]">
                    <svg width="24" height="25" viewBox="0 0 48 49" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M18.1421 26.601H15.9851C14.8182 26.601 13.8635 27.5558 13.8635 28.7226V37.6333C13.8635 38.812 14.8182 39.7549 15.9851 39.7549H18.1421V26.601ZM34.0186 30.4671L32.062 37.5154C31.8862 38.159 31.5037 38.7268 30.9733 39.1315C30.443 39.5361 29.7943 39.7552 29.1272 39.7549H19.9101V26.601L23.7996 21.0967C24.1009 20.6733 24.5418 20.3698 25.0448 20.2395C25.5479 20.1092 26.0807 20.1605 26.5496 20.3844C27.0185 20.6083 27.3935 20.9904 27.6084 21.4635C27.8233 21.9366 27.8644 22.4703 27.7246 22.9708L26.6991 26.601H31.0837C33.0993 26.601 34.5608 28.5223 34.0186 30.4671ZM12.3101 13.0335L13.1952 14.8262C13.2363 14.9096 13.2971 14.9816 13.3722 15.0363C13.4474 15.0909 13.5347 15.1264 13.6266 15.1398L15.6056 15.4274C15.7111 15.4429 15.8102 15.4877 15.8916 15.5565C15.9731 15.6254 16.0337 15.7156 16.0666 15.817C16.0996 15.9185 16.1036 16.0271 16.0781 16.1307C16.0527 16.2342 15.9988 16.3287 15.9226 16.4033L14.4906 17.7988C14.4241 17.8637 14.3744 17.9436 14.3457 18.0319C14.3169 18.1202 14.31 18.2141 14.3256 18.3056L14.6638 20.2764C14.6818 20.3817 14.67 20.4899 14.6297 20.5888C14.5894 20.6877 14.5222 20.7734 14.4358 20.8362C14.3493 20.8989 14.2471 20.9363 14.1406 20.944C14.034 20.9517 13.9275 20.9295 13.8329 20.8798L12.0625 19.9499C11.9803 19.9069 11.8889 19.8845 11.7962 19.8845C11.7034 19.8845 11.612 19.9069 11.5298 19.9499L9.75943 20.8798C9.66486 20.9295 9.55829 20.9517 9.45176 20.944C9.34522 20.9363 9.24297 20.8989 9.15655 20.8362C9.07012 20.7734 9.00296 20.6877 8.96266 20.5888C8.92236 20.4899 8.91052 20.3817 8.92848 20.2764L9.26675 18.3056C9.28249 18.2141 9.27568 18.1201 9.24693 18.0318C9.21818 17.9435 9.16835 17.8635 9.10174 17.7988L7.67203 16.4033C7.59583 16.3287 7.54198 16.2342 7.51654 16.1307C7.49109 16.0271 7.49508 15.9185 7.52803 15.817C7.56098 15.7156 7.6216 15.6254 7.70306 15.5565C7.78452 15.4877 7.88358 15.4429 7.98909 15.4274L9.96806 15.1398C10.0599 15.1262 10.1472 15.0906 10.2223 15.036C10.2974 14.9814 10.3582 14.9094 10.3994 14.8262L11.2846 13.0335C11.3318 12.9378 11.4048 12.8572 11.4954 12.8009C11.5861 12.7445 11.6906 12.7146 11.7973 12.7146C11.904 12.7146 12.0086 12.7445 12.0992 12.8009C12.1898 12.8572 12.2629 12.9378 12.3101 13.0335ZM24.5127 8.31886L25.3979 10.1116C25.439 10.1949 25.4997 10.267 25.5749 10.3216C25.65 10.3762 25.7373 10.4118 25.8293 10.4251L27.8083 10.7127C27.9138 10.7283 28.0128 10.773 28.0943 10.8419C28.1757 10.9107 28.2364 11.001 28.2693 11.1024C28.3023 11.2038 28.3062 11.3125 28.2808 11.416C28.2554 11.5196 28.2015 11.614 28.1253 11.6886L26.6932 13.0842C26.6268 13.149 26.5771 13.229 26.5483 13.3173C26.5196 13.4055 26.5127 13.4995 26.5282 13.591L26.8665 15.5617C26.8845 15.667 26.8726 15.7752 26.8323 15.8741C26.792 15.9731 26.7249 16.0587 26.6384 16.1215C26.552 16.1843 26.4498 16.2216 26.3432 16.2293C26.2367 16.2371 26.1301 16.2148 26.0355 16.1652L24.2652 15.2352C24.183 15.1923 24.0916 15.1698 23.9988 15.1698C23.9061 15.1698 23.8147 15.1923 23.7324 15.2352L21.9621 16.1652C21.8675 16.2148 21.761 16.2371 21.6544 16.2293C21.5479 16.2216 21.4456 16.1843 21.3592 16.1215C21.2728 16.0587 21.2056 15.9731 21.1653 15.8741C21.125 15.7752 21.1132 15.667 21.1311 15.5617L21.4694 13.591C21.4852 13.4995 21.4783 13.4055 21.4496 13.3172C21.4208 13.2289 21.371 13.1489 21.3044 13.0842L19.8747 11.6886C19.7985 11.614 19.7446 11.5196 19.7192 11.416C19.6938 11.3125 19.6977 11.2038 19.7307 11.1024C19.7636 11.001 19.8243 10.9107 19.9057 10.8419C19.9872 10.773 20.0862 10.7283 20.1918 10.7127L22.1707 10.4251C22.2627 10.4118 22.35 10.3762 22.4251 10.3216C22.5003 10.267 22.561 10.1949 22.6021 10.1116L23.4873 8.31886C23.5345 8.22315 23.6075 8.14257 23.6981 8.08622C23.7887 8.02987 23.8933 8 24 8C24.1067 8 24.2113 8.02987 24.3019 8.08622C24.3925 8.14257 24.4655 8.22315 24.5127 8.31886ZM36.7154 13.0335L37.6006 14.8262C37.6416 14.9096 37.7024 14.9816 37.7775 15.0363C37.8527 15.0909 37.94 15.1264 38.0319 15.1398L40.0109 15.4274C40.1164 15.4429 40.2155 15.4877 40.2969 15.5565C40.3784 15.6254 40.439 15.7156 40.472 15.817C40.5049 15.9185 40.5089 16.0271 40.4835 16.1307C40.458 16.2342 40.4042 16.3287 40.328 16.4033L38.8959 17.7988C38.8295 17.8637 38.7797 17.9436 38.751 18.0319C38.7223 18.1202 38.7154 18.2141 38.7309 18.3056L39.0692 20.2764C39.0871 20.3817 39.0753 20.4899 39.035 20.5888C38.9947 20.6877 38.9275 20.7734 38.8411 20.8362C38.7547 20.8989 38.6524 20.9363 38.5459 20.944C38.4394 20.9517 38.3328 20.9295 38.2382 20.8798L36.4679 19.9499C36.3856 19.9069 36.2943 19.8845 36.2015 19.8845C36.1087 19.8845 36.0173 19.9069 35.9351 19.9499L34.1648 20.8798C34.0702 20.9295 33.9636 20.9517 33.8571 20.944C33.7506 20.9363 33.6483 20.8989 33.5619 20.8362C33.4754 20.7734 33.4083 20.6877 33.368 20.5888C33.3277 20.4899 33.3159 20.3817 33.3338 20.2764L33.6721 18.3056C33.6878 18.2141 33.681 18.1201 33.6523 18.0318C33.6235 17.9435 33.5737 17.8635 33.5071 17.7988L32.075 16.4033C31.9988 16.3287 31.9449 16.2342 31.9195 16.1307C31.8941 16.0271 31.898 15.9185 31.931 15.817C31.964 15.7156 32.0246 15.6254 32.106 15.5565C32.1875 15.4877 32.2866 15.4429 32.3921 15.4274L34.371 15.1398C34.463 15.1264 34.5503 15.0909 34.6254 15.0363C34.7006 14.9816 34.7613 14.9096 34.8024 14.8262L35.6876 13.0335C35.7348 12.9375 35.808 12.8567 35.8989 12.8002C35.9897 12.7437 36.0945 12.7137 36.2015 12.7137C36.3085 12.7137 36.4133 12.7437 36.5041 12.8002C36.5949 12.8567 36.6681 12.9375 36.7154 13.0335Z" fill="#1079E0"/>
                    </svg>
                  </span>
                  <div className=" font-semibold text-[14px]">
                    <p className="text-center">Customer Satisfaction</p>
                    <div className="flex space-x-2">
                      {[...Array(5)].map((_, i) => (
                        <FaStar
                          key={i}
                          className={`text-[10px] text-[#e5e7eb]]}`}
                        />
                      ))}
                    </div>
                  </div>
                </div>
              </div>

              {/* Services Offered */}
              <h3 className="text-[16px] max-[1440px]:text-[20px] pl-0 p-3 leading-[36px] font-semibold">
                Service Offered
              </h3>
              <div className="flex flex-wrap gap-2 bg-[#F9FAFB] border rounded-2xl p-[10px] leading-[28px]">
                {data?.TypeOfService && data.TypeOfService.length > 0 ? (
                  data.TypeOfService.map((service, index) => (
                    <span
                      key={index}
                      className="bg-white text-gray-700 font-medium px-[8px] mx-1 my-1 rounded-lg border border-gray-300 text-[12px] 
                      transition-all duration-300 ease-in-out 
                      hover:shadow-[0_0_0_2px_var(--primary-color)]"
                    >
                      {service?.name ?? "-"}
                    </span>
                  ))
                ) : (
                  <span className="text-gray-500 text-[20px] max-[1440px]:text-[16px]">
                    -
                  </span>
                )}
              </div>

              {!["Real Estate Agent", "Title Abstractor"].includes(
                data.business_type
              ) && (
                  <>
                    <h3 className="text-[16px] max-[1440px]:text-[20px] pl-0 p-3 leading-[36px] font-semibold">
                      Type’s of client served
                    </h3>
                    <div className="flex flex-wrap gap-2 bg-[#F9FAFB] border rounded-2xl p-[10px] leading-[28px]">
                      {data?.ClientsDoYouServe?.map((service, index) => (
                        <span
                          key={index}
                          className="bg-white text-gray-700 font-medium  px-[8px] mx-1 my-1 rounded-lg border border-gray-300 text-[12px] 
                          transition-all duration-300 ease-in-out 
                          hover:shadow-[0_0_0_2px_var(--primary-color)]"
                        >
                          {service?.name ?? "-"}
                        </span>
                      ))}
                    </div>
                  </>
                )}

              {["Title Company"].includes(data?.business_type) && (
                <div>
                  <h3 className="text-[16px] max-[1440px]:text-[20px] pl-0 p-3 leading-[36px] font-semibold">
                    Underwriter Affiliations
                  </h3>
                  <div className="flex flex-wrap gap-2 bg-[#F9FAFB] border rounded-2xl p-[10px] leading-[28px]">
                    {Array.isArray(data?.UnderwriterAffiliation) &&
                      data.UnderwriterAffiliation.length > 0 ? (
                      <div className="flex flex-wrap gap-2 rounded-2xl p-[10px] leading-[28px]">
                        {data.UnderwriterAffiliation.map((Affiliation, index) => (
                          <span
                            key={index}
                            className="bg-white text-gray-700 font-medium px-[8px] mx-1 my-1 rounded-lg border border-gray-300 text-[12px] 
                            transition-all duration-300 ease-in-out 
                            hover:shadow-[0_0_0_2px_var(--primary-color)]"
                          >
                            {Affiliation?.name ?? "-"}
                          </span>
                        ))}
                      </div>
                    ) : (
                      <p className="text-gray-500 text-[12px] p-4">
                        No client types available
                      </p>
                    )}
                  </div>
                </div>
              )}

              <h3 className="text-[16px] max-[1440px]:text-[20x] pl-0 p-3 leading-[36px] font-semibold">
                About {data.business_type}
              </h3>

              <div className="grid grid-cols-3 max-[425px]:grid-cols-1 max-[425px]:p-1 gap-[10px] bg-[#F9FAFB] border rounded-2xl p-3">
                {/* Price Range */}
                <div className=" p-1 min-[426px]:border-r">
                  <p className="text-[#454A54] font-medium text-[12px] leading-[28px]">
                    {data?.business_type === "Title Abstractor"
                      ? `${"Service starts from "
                      }`
                      : data?.business_type === "Title Company"
                        ? `${"Transaction Handled Per Month"
                        }`
                        : data?.business_type === "Real Estate Agent"
                          ? `${"Price Range"
                          }`
                          : data?.business_type === "Real Estate Attorney"
                            ? `${"Number of Transaction Closed"
                            }`
                            : data?.business_type === "Appraisal Company"
                              ? `${"Price Starts From"
                              }`
                              : data?.business_type === "Surveyor Company"
                                ? `${"Fee Starts From"
                                }`
                                : "-"}
                  </p>
                  <p className="text-black mt-1 font-semibold text-[15px] leading-[28px]">
                    {data?.business_type === "Title Abstractor"
                      ? `$${data?.ListingDetail?.[0]?.service_start_from ?? "-"}`
                      : data?.business_type === "Title Company"
                        ? `${data?.ListingDetail?.[0]?.transaction_per_month ?? "-"}`
                        : data?.business_type === "Real Estate Agent"
                          ? `${data?.ListingDetail?.[0]?.price_range ?? "-"}`
                          : data?.business_type === "Real Estate Attorney"
                            ? `${data?.ListingDetail?.[0]?.ave_time ?? "-"}`
                            : data?.business_type === "Appraisal Company"
                              ? `${data?.ListingDetail?.[0]?.service_start_from ?? "-"}`
                              : data?.business_type === "Surveyor Company"
                                ? `${data?.ListingDetail?.[0]?.service_start_from ?? "-"}`
                                : data?.ListingDetail?.[0]?.price_range ?? "-"}
                  </p>
                </div>

                {/* Property Types */}
                {data?.business_type != "Real Estate Attorney" && data?.business_type != "Appraisal Company" && data?.business_type != "Surveyor Company" &&
                  <div className="p-1 min-[426px]:border-r">
                    <p className="text-[#454A54] font-medium text-[12px] leading-[28px]">
                      Specific Property Types
                    </p>
                    <p className="text-black mt-1 font-semibold text-[15px] text-wrap">
                      {data?.PropertyType?.map(item => item.name).join(", ")}
                    </p>
                  </div>
                }

                {/* Service Areas */}
                <div className="p-1 max-[426px]:border-0">
                  <div>
                    <p className="text-[#454A54] font-medium text-[12px] leading-[28px]">
                      Served Service Areas
                    </p>
                    <div className="flex items-center gap-4 mt-1 relative">
                      {/* <p className="text-black font-semibold text-[15px] leading-[28px]">
                        NATION WIDE
                      </p> */}
                      {/* <button className="text-[var(--primary-color)] font-semibold text-[16px] max-[1440px]:text-[14px] max-[425px]:text-[12px]  max-[425px]: py-[4px]  max-[425px]:px-[8px] bg-white px-[12px] py-[8px] shadow-[0px_0px_7.5px_0px_#00000033] rounded-md">
                        See List
                      </button> */}
                      <button
                        onClick={() => setShowList(!showList)}
                        className="text-[var(--primary-color)] font-semibold  text-[16px] max-[1440px]:text-[14px] max-[425px]:text-[12px] bg-white px-[12px] py-[8px] shadow-[0px_0px_7.5px_0px_#00000033] rounded-md"
                      > See List
                        {/* See List {console.log("showList", showList)} */}
                      </button>

                      {showList == true && (
                        <div className="absolute top-11 left-0 bg-white shadow-lg rounded-[15px] text-[12px]  w-64">
                          {data.ServiceArea && data.ServiceArea.length > 0 ? (
                            <ul>
                              {data.ServiceArea.map((item) => (
                                <li
                                  key={item.id}
                                  className="p-3 border-b last:border-0  cursor-pointer"
                                >
                                  {item.name}
                                </li>
                              ))}
                            </ul>
                          ) : (
                            <p className="text-gray-500 p-2 text-[12px]">
                              No specialization data available
                            </p>
                          )}
                        </div>
                      )}
                    </div>
                  </div>
                </div>

                {/* Industry Memberships */}
                <div className="p-1 min-[426px]:border-r">
                  <p className="text-[#454A54] font-medium text-[12px] leading-[28px]">
                    Industry Memberships
                  </p>
                  <p
                    className="text-black mt-1 text-wrap font-semibold text-[15px] leading-[28px]"
                  >
                    {data?.IndustryMembership?.map(item => item.name).join(", ")}
                  </p>
                </div>

                {/* Certifications */}
                {data?.business_type != "Real Estate Attorney" || data?.business_type != "Appraisal Company" &&
                  <div className="p-1 min-[426px]:border-r">
                    <p className="text-[#454A54] font-medium text-[15px] leading-[28px]">
                      {/* Certifications & Specializations */}
                      {data?.business_type === "Real Estate Agent"
                        ? "License & Certificates"
                        : "Certifications & Specializations"}
                    </p>
                    {/* <img
                    src="realtor-logo.png"
                    alt="Realtor"
                    className=
                    "h-10 ml-3"
                  /> */}
                    {data?.business_type === "Real Estate Agent" || data?.business_type === "Real Estate Attorney" ?

                      <div className="text-wrap">
                        {data?.CertificationSpecialization?.map(item => item.name).join(",")}
                      </div>
                      :
                      <p className="text-black mt-1 font-semibold text-[15px] leading-[28px]">
                        {data?.ListingDetail?.[0]?.certification}
                      </p>
                    }
                  </div>
                }
                <div className="p-1 min-[426px]:border-r">
                  <p className="text-[#454A54] font-medium text-[12px] leading-[28px]">
                    {data?.business_type === "Title Abstractor"
                      ? "E&O Insurance"
                      : "Average turnaround time"}
                  </p>
                  {/* <img
                    src="realtor-logo.png"
                    alt="Realtor"
                    className=
                    "h-10 ml-3"
                  /> */}
                  <p className="text-black mt-1 font-semibold text-[15px] leading-[28px]">

                    {data?.business_type === "Title Abstractor"
                      ? "E&O Insurance"
                      : "Average turnaround time"}
                  </p>
                </div>
                {data?.ListingDetail?.[0]?.volume_capacity !== null &&
                data?.ListingDetail?.[0]?.volume_capacity !== undefined ? (
                  <div className="p-1">
                    <p className="text-[#454A54] font-medium text-[12px] leading-[28px]">Volume Capacity</p>
                    <p className="text-black mt-1 font-semibold text-[15px] leading-[28px]">{data.ListingDetail[0].volume_capacity}</p>
                  </div>
                ) : null}
              </div>

              {/* {Array.isArray(data?.FeeStructure) &&
                data.FeeStructure.length > 0 ? (
                <h3 className="text-[16px] p-4 leading-[36px] font-semibold border-y my-6">
                  Fee Structure:{" "}
                  <span className="text-[24px] text-[#454A54] font-semibold">
                    {data.FeeStructure.map((fee) => fee.name).join(", ")}
                  </span>
                </h3>
              ) : null} */}

              <h3 className="text-[16px] pl-0 p-3 leading-[36px] font-semibold">
                About the Business
              </h3>
              <div className="flex flex-wrap gap-2 bg-[#F9FAFB] border rounded-2xl p-3 leading-[28px]">
                <p className="text-[14px] text-[#454A54]">
                  {expanded
                    ? description
                    : description.slice(0, 150) +
                    (description.length > 150 ? "..." : "")}
                </p>
                {description.length > 150 && (
                  <button
                    className="text-[var(--primary-color)] text-[12px] border border-[var(--primary-color)] px-[20px] py-[3px] rounded-md"
                    onClick={() => setExpanded(!expanded)}
                  >
                    {expanded ? "Read Less" : "Read More"}
                  </button>
                )}
              </div>

              <h3 className="text-[16px] pl-0 p-3 leading-[36px] font-semibold">
                Working Hours
              </h3>
              <div className="bg-[#F9FAFB] border rounded-2xl p-6">
                <div className="">
                  {/* <h1>Monday to Friday</h1> */}
                  {data?.WorkingHour?.map((list, i) => (
                    <div className="flex md:flex-row flex-col md:place-items-center mt-2 gap-3 text-[14px]">
                      <div className="w-1/5">
                        <span>{list.day}</span>
                      </div>
                      <div className="text-nowrap text-[#6C6C6C] border-[2px] border-[var(--primary-color)] px-[10px] py-[3px] rounded-md bg-white">
                        From{" "}
                        <span className="text font-semibold text-black ms-2">
                          {convertTo12HourFormat(list.from_time)}
                        </span>
                      </div>
                      <div className="text-nowrap text-[#6C6C6C] border-[2px] border-[var(--primary-color)] px-[10px] py-[3px] rounded-md bg-white">
                        To{" "}
                        <span className="text font-semibold text-black ms-2">
                          {convertTo12HourFormat(list.to_time)}
                        </span>
                      </div>
                    </div>
                  ))}
                </div>
                {/* <div className="w-1/3 md:ps-5 mt-5">
                  <h1>Saturday & Sunday</h1>
                  <div className="mt-8">
                    <span className="text font-semibold text-black mt-4 border-[1px] border-[#D60101] px-[20px] py-[10px] rounded-md">
                      Closed
                    </span>
                  </div>
                </div> */}
              </div>

              <div className="flex justify-between items-center">
                {" "}
                <h3 className="text-[16px] pl-0 p-3 leading-[36px] font-semibold">
                  Reviews
                </h3>
                <div>
                  <button className="flex justify-center items-center text-[var(--primary-color)] text-[14px] max-[425px]:text-[14px] max-[425px]:px-[15px] max-[425px]:py-[8px]  rounded-md  border border-[var(--primary-color)] px-[20px] py-[5px]">
                    <FaStar className="mr-[4px]" />
                    Write a reivew
                  </button>
                </div>
              </div>

              <div className="border rounded-2xl bg-[#F9FAFB] p-3">
                {/* Star Rating */}
                <div className="flex space-x-3">
                  {[...Array(5)].map((_, i) => (
                    <FaStar
                      key={i}
                      className={`text-[20px] cursor-pointer ${i < rating
                        ? "text-[var(--primary-color)]"
                        : "text-[#C7CAD1]"
                        }`}
                      onClick={() => setRating(i + 1)} // Set rating on click
                    />
                  ))}
                </div>

                <p className="mt-4 text-gray-600 text-[12px] max-[425px]:text-[14px]">
                  A few things to consider in your review
                </p>

                {/* Tags */}
                <div className="flex gap-2 mt-2">
                  {["Service Requested", "Quality", "Value"].map((tag) => (
                    <span
                      key={tag}
                      className="bg-[#F0F5F9] text-[12px] text-[#454A54] px-3 py-1  rounded-lg max-[425px]:text-[12px]"
                    >
                      {tag}
                    </span>
                  ))}
                </div>

                {/* Review Input */}
                <textarea
                  className="w-full mt-3 p-4 border text-[12px] max-[1440px]:text-[12px] rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400"
                  placeholder="Start your review..."
                  rows="4"
                  value={review}
                  onChange={(e) => setReview(e.target.value)}
                ></textarea>

                {/* Submit Button */}
                <button
                  onClick={() => handleSubmit(data.id)}
                  className="mt-3  bg-[var(--primary-color)] text-[12px] max-[1440px]:py-[10px] text-white px-[20px] py-[14px] rounded-lg "
                >
                  Post Review
                </button>
              </div>

              {/* Profile Image */}

              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 bg-[#F9FAFB] gap-[10px] mt-5 p-3 border rounded-2xl">
                {/* Left Section: Profile, Name, Location, Review, Actions */}
                <div>
                  <TotalReviewsCard totalReviews={getdata.total_ratting} />
                </div>

                <div>
                  <Averating rating={getdata.avg_ratting} />
                </div>
                <div>
                  <div className="mt-[5px] xl:w-55 2xl:w-full">
                    {ratings.map((item) => (
                      <RatingBar key={item.rating} {...item} />
                    ))}
                  </div>
                </div>
              </div>
              <div className="grid grid-cols-1 md:grid-cols-[auto_250px] bg-[#F9FAFB] gap-10 mt-5 p-3 border rounded-2xl">
                {/* Left Section: Profile, Name, Location, Review, Actions */}
                <div className="">
                  <div className="flex">
                    {" "}
                    <img
                      src={Profile}
                      alt="User"
                      className="w-[50px] h-[50px] rounded-full mr-4"
                    />
                    <div>
                      {" "}
                      <h4 className="font-medium text-[16px]">
                        Henry Scott
                      </h4>
                      <p className="text-gray-500 text-[14px]">
                        Alexandria, VA
                      </p>
                    </div>
                  </div>

                  <p className="text-gray-600 mt-3 text-[14px] max-[1440px]:text-[14px]">
                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Quia, numquam....
                  </p>

                  {/* Actions */}
                  <div className="flex space-x-4 mt-3 font-medium">
                    {/* <button className="text-[12px] ">Like</button> */}
                    <button className="text-[12px]">Reply</button>
                  </div>
                </div>

                {/* Right Section: Stars & Date */}
                <div className="text-right">
                  <div className="flex justify-end text-blue-500 text-[20px] ">
                    {[...Array(5)].map((_, i) => (
                      <FaStar key={i} className="me-[5px]" />
                    ))}
                  </div>
                  <p className="text-gray-500 text-[14px] mt-1">
                    Oct 23, 2024
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Footer */}
      <Footer />
    </div>
  );
}
